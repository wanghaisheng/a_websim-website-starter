name: Code Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment for Claude
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat << 'EOF' > $HOME/.claude-code-router/config.json
          {
            "log": true,
            "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
            "OPENAI_BASE_URL": "https://api.deepseek.com",
            "OPENAI_MODEL": "deepseek-chat"
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "${{ secrets.ANTHROPIC_API_KEY }}"

  grok:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@grok')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@grok')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@grok')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@grok') || contains(github.event.issue.title, '@grok')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment for Grok
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.grok-code-router
          cat << 'EOF' > $HOME/.grok-code-router/config.json
          {
            "log": true,
            "XAI_API_KEY": "${{ secrets.XAI_API_KEY }}",
            "XAI_BASE_URL": "https://api.x.ai",
            "XAI_MODEL": "grok-3"
          }
          EOF
        shell: bash

      - name: Start Grok Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/grok-code-router@1.0.8 start &
        shell: bash

      - name: Run Grok Code
        id: grok
        uses: xai/grok-code-action@beta
        env:
          XAI_BASE_URL: http://localhost:3456
        with:
          xai_api_key: "${{ secrets.XAI_API_KEY }}"

  deepseek:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@deepseek')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@deepseek')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@deepseek')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@deepseek') || contains(github.event.issue.title, '@deepseek')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment for DeepSeek
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.deepseek-code-router
          cat << 'EOF' > $HOME/.deepseek-code-router/config.json
          {
            "log": true,
            "DEEPSEEK_API_KEY": "${{ secrets.DEEPSEEK_API_KEY }}",
            "DEEPSEEK_BASE_URL": "https://api.deepseek.com",
            "DEEPSEEK_MODEL": "deepseek-pro"
          }
          EOF
        shell: bash

      - name: Start DeepSeek Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/deepseek-code-router@1.0.8 start &
        shell: bash

      - name: Run DeepSeek Code
        id: deepseek
        uses: deepseek/deepseek-code-action@beta
        env:
          DEEPSEEK_BASE_URL: http://localhost:3456
        with:
          deepseek_api_key: "${{ secrets.DEEPSEEK_API_KEY }}"

  gemini:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@gemini')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@gemini')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@gemini') || contains(github.event.issue.title, '@gemini')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment for Gemini
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.gemini-code-router
          cat << 'EOF' > $HOME/.gemini-code-router/config.json
          {
            "log": true,
            "GEMINI_API_KEY": "${{ secrets.GEMINI_API_KEY }}",
            "GEMINI_BASE_URL": "https://api.gemini.com",
            "GEMINI_MODEL": "gemini-pro"
          }
          EOF
        shell: bash

      - name: Start Gemini Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/gemini-code-router@1.0.8 start &
        shell: bash

      - name: Run Gemini Code
        id: gemini
        uses: google/gemini-code-action@beta
        env:
          GEMINI_BASE_URL: http://localhost:3456
        with:
          gemini_api_key: "${{ secrets.GEMINI_API_KEY }}"
